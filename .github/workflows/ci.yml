name: CI
on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
    everything:
        name: Build, Test, or Deploy
        runs-on: ubuntu-latest
        timeout-minutes: 30
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
        steps:
            # Check out current commit
            - name: Checkout
              uses: actions/checkout@v2

            # Make sure buildkit is enabled
            - name: Enable buildkit
              shell: bash
              run: |
                  echo '{"experimental": "enabled"}' > ~/.docker/config.json
            
            # Initially run the development environment to make sure that succeeds
            - name: Build Dev
              run: make up
    
            # Build and run the static environment
            - name: Build Static 
              run: docker-compose down -v && make static-docker-compose.yml up

            # Run end-to-end tests
            - name: End-To-End Tests
              run: | 
                mkdir -p end-to-end/reports
                chmod a+rwx end-to-end/reports
                make test
            
            # Upload artifacts if tests fail
            - name: Test Failure Forensics
              uses: actions/upload-artifact@v2
              if: failure()
              with:
                name: end-to-end-reports
                path: end-to-end/reports         

            # Log in to Docker, if we have the secrets
            - name: Docker Login
              if: ${{ env.DOCKER_USER != null }}
              uses: docker/login-action@v1
              with:
                registry: ghcr.io
                username: ${{ env.DOCKER_USER }}
                password: ${{ secrets.DOCKER_PASS }}
            
            # Push docker images
            - name: Docker Push
              if: |
                ${{ env.DOCKER_USER != null }} &&
                contains(['refs/heads/development', 'refs/heads/main'], github.ref)
              run: docker-compose push drupal